image: maven:3.6.1;gesellix/trufflehog

pipelines:
  default:
    - step:
        name: maven clean
        caches:
          - maven
        script:
          - mvn clean
    - step:
        name: maven package
        caches:
          - maven
        script:
          - mvn package 
          - ls target/
    - step:
        name: inspect secrets
        caches:
          - maven
        script:
          - trufflehog --regex --entropy=False https://imbhascker13@bitbucket.org/sample-slack/debitcardapp.git
    - step:
         name: Snyk Test
         script:
    
          - pipe: snyk/snyk-scan:0.4.0
            variables:
               SNYK_TOKEN: "$SNYK_TKN"
               LANGUAGE: "docker"
               IMAGE_NAME: $IMAGE_NAME
               TARGET_FILE: "Dockerfile"
          - docker push $IMAGE_NAME
    - step:
               name: Artifactory Upload
               caches:
                 - maven
               script:
                 - pipe: JfrogDev/artifactory-maven:0.3.3
                   variables:
                     ARTIFACTORY_URL: $url
                     ARTIFACTORY_USER: $user
                     ARTIFACTORY_PASSWORD: $pass
                     MAVEN_SNAPSHOT_REPO: 'debitcardcustomer-0.0.1-SNAPSHOT.war'
                     MAVEN_RELEASE_REPO: 'dev-debit-bit'


 - step:
             name: Snyk test
             image: snyk/snyk-cli:maven-3.5.4
             caches:
             - maven
             script:
               - mvn -N io.takari:maven:wrapper
               - snyk auth $SNYK_TKN
               - snyk test 
               - pipe: snyk/snyk-scan:0.4.3              
                 variables:
                   SNYK_TOKEN: $SNYK_TKN
                   ORGANIZATION: "Hyndavi_Ommu"
                   DONT_BREAK_BUILD: "true" 


 - step: &build-test-sonarcloud
        name: Build, test and analyze on SonarCloud
        caches:
          - maven
          - sonar
        script:
          - mvn -B org.jacoco:jacoco-maven-plugin:prepare-agent verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        artifacts:
          - target/**
                   
e1ffac185965ece5149c01c06bf032622e6458b6

	1.Understand the DevOps process and best practices.
2.Have a good knowledge on the basic DevOps tools and its capabilities to be prepared for any assignments.
3.Look out for knowledge from the seniors/architects/leads by actively reaching out to them and offer to be part of the solution.




 - step:
        name: uploading artifacts
        script:
                 - pipe: JfrogDev/artifactory-maven:0.3.3
                   variables:
                     ARTIFACTORY_URL: $url
                     ARTIFACTORY_USER: $user
                     ARTIFACTORY_PASSWORD: $pass
                     MAVEN_SNAPSHOT_REPO: "debit-card-application-dev/"
                     MAVEN_RELEASE_REPO: "debit-card-application-dev/"


 - step:
        name: uploading artifacts
        script:
         - pipe: JfrogDev/artifactory-generic-upload:0.3.2
           variables:
            ARTIFACTORY_URL: $url
            ARTIFACTORY_USER: $user
            ARTIFACTORY_PASSWORD: $pass
            FILE_SPEC: "false"
            SOURCE_PATH: "./*.war"
            TARGET_PATH: "debit-card-application-dev/"
